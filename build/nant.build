<project name = "Test" default="all">

<!-- Targets -->
<!-- configure    : Configure the build process environment and properties for paths and such.  -->
<!-- build        : Compiles the solution(s) using msbuild.                                     -->
<!-- test         : Runs the unittests.                                                         -->
<!-- package      : Creates install package(s).                                                 -->

<include buildfile="sub/vs2010.build"/>
<include buildfile="sub/nunit.build"/>

<target name="all" depends="configure,build,test"/>

<target name="clean"/>
<target name="configure" depends="conf.build,conf.dump"/>
<target name="build" depends="build.TheWorks"/>
<target name="test" depends="test.TheWorks"/>

<target name="conf.build">
    <property name="build.configuration" value="Debug" overwrite="false"/>
    <property name="folder.project" value="${path::get-directory-name(directory::get-current-directory())}"/>
    
    <echo message="folder.project: ${folder.project}"/>
</target>

<target name="conf.dump">
    <echo message="Build configuration:"/>
    <echo message="- build.configuration : ${build.configuration}"/>
</target>

<target name="build.TheWorks" depends="msvs.setup">
    <exec program="msbuild" commandline="/nologo /target:Build /p:Configuration=${build.configuration} ${folder.project}\src\TheWorks.sln"/>
</target>

<target name="test.TheWorks" depends="nunit.setup">
    <nunit2>
        <formatter type="Plain" />    
        <test>
            <assemblies>
                <include name="../src/**/bin/${build.configuration}/*Tests.dll"/>
            </assemblies>
        </test>
    </nunit2>
</target>





<target name="env-setup">
    <if test="${not property::exists('build.number')}">
        <echo message="Local build!"/>
        <property name="build.number" value="0.0"/>
    </if>
</target>

<target name="set-params">
    <echo message="##teamcity[buildNumber '1.0.{build.number}']"/>
</target>

<target name="read-build.config">
    <xmlpeek file="build.config.xml" property="version.major" xpath="/root/version/major"/>
    <xmlpeek file="build.config.xml" property="version.minor" xpath="/root/version/minor"/>
    <xmlpeek file="build.config.xml" property="version.patch" xpath="/root/version/patch"/>
    <echo message="${version.major}.${version.minor}"/>
</target>

</project>
